version: "3.9"
name: obs-stack

networks:
  monitoring: { driver: bridge }


services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    networks: [monitoring]
    ports: ["127.0.0.1:9090:9090"]
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus/data
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention.time=7d
      - --storage.tsdb.wal-compression

  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    restart: unless-stopped
    networks: [monitoring]
    depends_on: [prometheus, loki]
    ports: ["127.0.0.1:3000:3000"]
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    networks: [monitoring]
    ports: ["127.0.0.1:9100:9100"]
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --path.rootfs=/rootfs

  loki:
    image: grafana/loki:2.9.8
    container_name: loki
    restart: unless-stopped
    networks: [monitoring]
    ports: ["127.0.0.1:3100:3100"]
    volumes:
      - ./loki/local-config.yaml:/etc/loki/config.yml
      - ./loki/data:/loki/data
    command: -config.file=/etc/loki/config.yml